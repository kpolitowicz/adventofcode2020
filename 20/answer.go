package main

import (
	"fmt"
	"io/ioutil"
	"os"
	"strings"

	"github.com/kpolitowicz/adventofcode2020/jurassicjigsaw"
)

func main() {
	dat, _ := ioutil.ReadFile("input.txt")
	images := jurassicjigsaw.ParseInput(strings.Trim(string(dat), "\n"))
	edges := images.GetEdges()

	switch os.Args[1] {
	case "1":
		for title, edges := range *edges.FindSigletons() {
			fmt.Println(title)
			for _, edge := range edges {
				fmt.Println(edge)
			}
		}
		// Only these 4 tiles have 4 entries (2 sides, flipped and not)
		// Thus, these are the corner tiles:
		// 1213 * 1291 * 1543 * 1117 = 2699020245973
	case "2":
		tileMap := [][]string{
			{"1213", "1297", "1973", "1021", "2663", "3221", "2269", "2099", "2053", "3467", "2707", "1543"},
			{"3373", "1499", "2887", "2791", "1583", "2399", "1609", "1237", "3067", "3413", "2621", "1871"},
			{"1039", "1747", "2393", "1847", "2957", "1093", "1231", "1867", "3617", "1949", "2351", "1429"},
			{"1621", "3229", "3163", "3347", "1933", "3533", "1489", "2609", "3557", "3371", "2039", "1663"},
			{"2803", "3541", "3877", "1637", "1901", "2143", "1619", "2687", "1861", "3803", "3041", "3001"},
			{"1601", "1931", "2237", "3343", "2309", "1831", "1319", "2417", "2953", "1439", "1721", "3217"},
			{"3137", "1741", "3779", "2341", "3011", "1109", "3727", "2333", "3929", "2161", "1879", "2729"},
			{"1627", "2027", "3271", "3301", "3121", "3637", "1249", "1657", "2833", "2671", "3697", "3181"},
			{"3671", "3529", "1571", "3257", "2081", "1321", "1129", "2087", "2441", "1993", "3457", "1187"},
			{"2389", "2699", "1787", "1907", "2381", "2549", "3677", "3967", "2719", "2857", "1361", "3517"},
			{"1009", "1153", "3049", "2251", "1279", "2423", "1019", "1889", "3391", "2467", "1327", "2003"},
			{"1291", "2657", "3931", "2203", "3673", "2797", "2861", "1531", "3323", "2617", "1559", "1117"},
		}
		transforms := [][]string{
			{"Fx", "R180", "", "", "", "", "", "", "", "", "", ""},
			{"Fx", "R180", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
			{"", "", "", "", "", "", "", "", "", "", "", ""},
		}
		_ = transforms
		for _, tileRow := range tileMap {
			for i := 0; i < 10; i++ {
				for j := 0; j < len(tileRow); j++ {
					img := (*images)[tileRow[j]]
					fmt.Printf("%s ", img[i])
				}
				fmt.Printf("\n")
			}
			fmt.Printf("\n")
		}
	}
}
